package internal;

message WriteShardRequest {
    required uint64 ShardID = 1;
    repeated bytes  Points  = 2;
    optional string Database = 3;
    optional string RetentionPolicy = 4;
}

message WriteShardResponse {
    required int32  Code    = 1;
    optional string Message = 2;
}

message ExecuteStatementRequest {
    required string Statement = 1;
    required string Database  = 2;
}

message ExecuteStatementResponse {
    required int32  Code    = 1;
    optional string Message = 2;
}

message CreateIteratorRequest {
    required bytes  Measurement = 1;
    required bytes  Opt      = 2;
    repeated uint64 ShardIDs = 3;
}

message CreateIteratorResponse {
    optional string Err = 1;
}

message Field{
    required string name =1;
    required uint64 type = 2;
}

message FieldDimensionsRequest {
    required string Measurement = 1;
    repeated uint64 ShardIDs = 2;
   // required bytes  Sources  = 2;
}

message FieldDimensionsResponse {
    repeated Field Fields     = 1;
    repeated string Dimensions = 2;
    optional string Err        = 3;
}

message MapTypeRequest {
    repeated uint64 ShardIDs = 1;
    required string Measurement = 2;
    required string Field = 3;
}

message MapTypeResponse {
    required int64  Type = 1;
    optional string Err = 2;
}

message IteratorCostRequest {
    repeated uint64 ShardIDs = 1;
    required Measurement Measurement = 2;
    required IteratorOptions IteratorOptions = 3;
}

message IteratorCostResponse {
    required IteratorCost  Cost = 1;
    optional string Err = 2;
}

message IteratorCost {
    required int64 NumShards = 1;
    required int64 NumSeries = 2;
    required int64 CachedValues = 3;
    required int64 NumFiles = 4;
    required int64 BlocksRead = 5;
    required int64 BlockSize = 6;
}

message Point {
    required string Name       = 1;
    required string Tags       = 2;
    required int64  Time       = 3;
    required bool   Nil        = 4;
    repeated Aux    Aux        = 5;
    optional uint32 Aggregated = 6;

    optional double FloatValue    = 7;
    optional int64  IntegerValue  = 8;
    optional string StringValue   = 9;
    optional bool   BooleanValue  = 10;
    optional uint64 UnsignedValue = 12;

    optional IteratorStats Stats = 11;
    optional bytes Trace = 13;
}

message Aux {
    required int32  DataType      = 1;
    optional double FloatValue    = 2;
    optional int64  IntegerValue  = 3;
    optional string StringValue   = 4;
    optional bool   BooleanValue  = 5;
    optional uint64 UnsignedValue = 6;
}

message IteratorOptions {
    optional string      Expr       = 1;
    repeated string      Aux        = 2;
    repeated VarRef      Fields     = 17;
    repeated Measurement Sources    = 3;
    optional Interval    Interval   = 4;
    repeated string      Dimensions = 5;
    repeated string      GroupBy    = 19;
    optional int32       Fill       = 6;
    optional double      FillValue  = 7;
    optional string      Condition  = 8;
    optional int64       StartTime  = 9;
    optional int64       EndTime    = 10;
    optional string      Location   = 21;
    optional bool        Ascending  = 11;
    optional int64       Limit      = 12;
    optional int64       Offset     = 13;
    optional int64       SLimit     = 14;
    optional int64       SOffset    = 15;
    optional bool        StripName  = 22;
    optional bool        Dedupe     = 16;
    optional int64       MaxSeriesN = 18;
    optional bool        Ordered    = 20;
}

message Measurements {
    repeated Measurement Items = 1;
}

message Measurement {
    optional string Database        = 1;
    optional string RetentionPolicy = 2;
    optional string Name            = 3;
    optional string Regex           = 4;
    optional bool   IsTarget        = 5;
    optional string SystemIterator  = 6;
}

message Interval {
    optional int64 Duration = 1;
    optional int64 Offset   = 2;
}

message IteratorStats {
    optional int64 SeriesN = 1;
    optional int64 PointN  = 2;
}

message VarRef {
    required string Val  = 1;
    optional int32  Type = 2;
}
